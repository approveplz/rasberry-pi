# DOCKER COMPOSE FILE - Orchestrates multiple containers working together
# 
# WHAT IS DOCKER?
# - Docker packages applications and their dependencies into "containers"
# - Containers are like lightweight virtual machines that run the same way everywhere
# - Think of it as shipping your app in a standardized box that works on any computer
#
# WHAT IS DOCKER COMPOSE?  
# - Tool for defining and running multi-container Docker applications
# - Instead of running 5 separate "docker run" commands, this file defines everything
# - "docker-compose up" starts all services, "docker-compose down" stops them
#
# OUR MEDIA STACK:
# 1. Overseerr - Beautiful web UI for requesting movies/TV shows
# 2. Radarr - Movie download management and organization
# 3. Jackett - Searches torrent sites and provides a unified API
# 4. qBittorrent - Downloads torrents that Jackett finds  
# 5. Plex - Media server that streams your downloaded movies
#
# HOW THEY WORK TOGETHER:
# Overseerr UI → User requests movie → Overseerr tells Radarr → Radarr asks Jackett for torrents
# → Jackett finds torrents → Radarr picks best torrent → Radarr tells qBittorrent to download
# → Downloaded files are organized by Radarr → Files appear in Plex
#
# Docker Compose defines multiple containers that work together as a "stack"
# Each "service" below becomes a separate container when you run "docker-compose up"

services:
  # OVERSEERR SERVICE - Beautiful web UI for requesting movies/TV shows
  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    
    environment:
      - TZ=Etc/UTC
      - LOG_LEVEL=debug
    
    volumes:
      - ./config/overseerr:/app/config
    
    ports:
      - "5055:5055"
    
    depends_on:
      - radarr
      - plex
    
    restart: unless-stopped

  # RADARR SERVICE - Movie download management and organization
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    
    environment:
      - TZ=Etc/UTC
    
    volumes:
      - ./config/radarr:/config          # Radarr settings and database
      - ./movies:/media/movies           # Your movie library
      - ./downloads:/media/downloads     # Recently downloaded files
    
    ports:
      - "7878:7878"                      # Radarr web interface
    
    depends_on:
      - jackett
      - qbittorrent
    
    restart: unless-stopped

  # JACKETT SERVICE - Torrent indexer (searches torrent sites for you)
  jackett:
    # IMAGE: Use a pre-built Docker image from Docker Hub (like downloading an app)
    # "latest" means get the newest version
    # LinuxServer.io images are popular, well-maintained community images
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    
    environment:
      # TZ: Set timezone so logs show correct time
      - TZ=Etc/UTC
    
    # PERSISTENT STORAGE: Store app settings and data outside container
    # When container is deleted, these files remain on your computer
    volumes:
      - ./config/jackett:/config      # App settings and configuration
      - ./downloads:/downloads        # Downloaded torrents go here
    
    # WEB UI ACCESS: Jackett runs a web interface on port 9117
    ports:
      - "9117:9117"
    restart: unless-stopped

  # QBITTORRENT SERVICE - The actual torrent downloading client
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    
    environment:
      - TZ=Etc/UTC
      # Tell qBittorrent which port to use for its web interface
      - WEBUI_PORT=8080
    
    volumes:
      - ./config/qbittorrent:/config  # qBittorrent settings
      - ./downloads:/downloads        # Where downloaded files go
    
    ports:
      - "8080:8080"                   # Web UI for managing torrents
      - "6881:6881"                   # BitTorrent protocol ports (TCP)
      - "6881:6881/udp"              # BitTorrent protocol ports (UDP)
    restart: unless-stopped

  # PLEX SERVICE - Media server (like your own Netflix)
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    
    environment:
      - TZ=Etc/UTC
      - PLEX_CLAIM=your-plex-claim-token  # Get from https://www.plex.tv/claim/
    
    volumes:
      - ./config/plex:/config          # Plex database and settings
      - ./movies:/media/movies         # Your movie library
      - ./downloads:/media/downloads   # Recently downloaded files
    
    ports:
      - "32400:32400"                  # Plex web interface
      - "1900:1900/udp"               # Plex discovery
      - "3005:3005"                   # Plex companion
      - "5353:5353/udp"               # Plex companion
      - "8324:8324"                   # Plex companion
    
    restart: unless-stopped

# DOCKER NETWORKS: Create a custom network so all containers can communicate
# Docker automatically creates DNS entries so "jackett" resolves to the jackett container
networks:
  default:
    name: media-network 